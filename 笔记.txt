html - 页面的内容
css - 页面的样式
javascript - 页面的交互
document - 文档
charset - 字符集
行级元素 - a span img i after button input b -- 水平排布，靠内容撑开,不能设置宽高
块级元素 - p h1~h6 table div ul ol li form table --垂直分布，宽充满整个父元素，能设置宽和高
                                        如果不设置高，高就是内容撑开的
display - 块级元素可以变成行级元素，行级元素可以变成块级元素
float - 内容撑开，如果没有设置宽高和没有内容，则没有显示
        可以设置宽高
display float position -- 行级元素可以改成块级元素
text-align:center -- 行级元素水平居中（设置在父元素上）
line-height:行高 -- 块级元素水平居中（设置在父元素上）
    水平和垂直居中 -- display: flex;/*弹性盒模型*/
                      justify-content: center;/*居中*/
                      align-items: center;/*居中*/
不拖文档流，空间不释放
定位有几种值 -- static：默认
                absolute：相对于最近的已经定位的祖先元素，如果没有则相对于body相对于浏览器.
                        空间释放，脱离文档流，就是其他元素可以占他原来的位置
                relative：相对于自己的初始位置定位，空间不释放，不脱离文档流
                fixed：相对于body相对于浏览器
盒模型 -- 标准盒模型和怪异盒模型
盒模型分为几部分 -- content padding border margin
标准盒模型和怪异盒模型怎么转换 -- box-sizing:border-box content-box
                                  border-box代表怪异盒模型
                                  content-box代表标准盒模型
元素塌陷问题 -- 子元素脱离文档流当值父元素高度为0
                解决方案：知道高度，直接在他父元素加上高
                          不知道高度时，overflow:hidden
伪元素 -- 在元素的最后孩子插入行级元素
background-size: contain
background-size: cover
                 这两者的区别在于，contain是图片完全被放到父元素中，哪怕是图片的某一边框不够长也行
                                   cover是图片被不一定完全放到父元素中，只要图片某一边框与父元素的某一边框等大小就行
在伸缩盒中如果设置align-items: center和justify-content，则表示在水平和垂直都居中，这两者到底是水平还是垂直跟flex-direction有关

标准盒模型和怪异盒模型的区别：标准盒模型的width=内容区域
                              怪异盒模型的width=border+padding+内容区域
js不能读取客户机上的文件，不能关闭不是有它打开的窗口，不能从另一个服务器已经打开的窗口读取信息
js变量名称区分大小写，不能用关键字：var function true false
js不分小数和整数，统称为数值类型
js基础数据类型：string字符串
            number数值
            boolean布尔值
            undefined未定义值
            null
js一个=相当于赋值，两个==相当于判断两个对象是否相等
js复合（引用）数据类型：对象，数组
js分几种数据类型：基础数据类型，引用数据类型
js特殊的数据类型：undefined：未定义值：声明变量但没有进行赋值
js中c++和++c的区别：c++是先运算再加一      c=1；5 + c++ + c=5+1+1+2=8，第二个c已经运算了
                    ++c是先加一再运算
NaN，即为No no Number
空字符串，未赋值，0（false）：本身都是false
空格字符串：本身为true
字符串转换为数值：空字符串转换成数值为0
                  正常的字符串转换是NaN
π：Math.PI
chatAt：得到指定位置处的字符
substr(x,y)：从x下标开始截取，截取y个
substring(x,y)：从x下标开始截取，截取到y下标，不包括y下标
习惯：对象o，数组a














